23.02.2025 00:33:44
History:
                                                                                                                                                          model  ...                                                                                                                                             model_info
14   RandomForestRegressor(input_matrix, RandomForestRegressor__max_depth=10, RandomForestRegressor__max_features=log2, RandomForestRegressor__n_estimators=90)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -5.185262789981041}
22  RandomForestRegressor(input_matrix, RandomForestRegressor__max_depth=200, RandomForestRegressor__max_features=sqrt, RandomForestRegressor__n_estimators=90)  ...    {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -5.24844350334702}
21   RandomForestRegressor(input_matrix, RandomForestRegressor__max_depth=30, RandomForestRegressor__max_features=sqrt, RandomForestRegressor__n_estimators=40)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -5.296686553260081}
0                                                               KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=3, KNeighborsRegressor__p=3)  ...    {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -8.80738364800328}
6                                                               KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=5, KNeighborsRegressor__p=5)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -9.190619984203215}
15                                                              KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=5, KNeighborsRegressor__p=1)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -9.365997791181467}
7                                                               KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=3, KNeighborsRegressor__p=1)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -9.771351476221268}
11                                                             KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=20, KNeighborsRegressor__p=1)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.346236841778808}
20                                                                                           Ridge(input_matrix, Ridge__alpha=1000, Ridge__fit_intercept=False)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.47046977908593}
19                                                                                           Lasso(input_matrix, Lasso__alpha=0.01, Lasso__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.472707179580711}
23                                                                                              Ridge(input_matrix, Ridge__alpha=1, Ridge__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.472709044292793}
2                                                                                             Ridge(input_matrix, Ridge__alpha=0.1, Ridge__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.472711537979773}
9                                                                                               Lasso(input_matrix, Lasso__alpha=1, Lasso__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.474394733469472}
12                                                                                              Ridge(input_matrix, Ridge__alpha=10, Ridge__fit_intercept=True)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.48574238533521}
10                                                                                               Ridge(input_matrix, Ridge__alpha=1, Ridge__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.485771448880485}
8                                                                                              Ridge(input_matrix, Ridge__alpha=0.1, Ridge__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.485774362175498}
17                                                                                           Ridge(input_matrix, Ridge__alpha=0.001, Ridge__fit_intercept=True)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.48577468271512}
5                                                                                                Lasso(input_matrix, Lasso__alpha=1, Lasso__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.488495884553314}
13                                                         LinearSVR(input_matrix, LinearSVR__C=0.001, LinearSVR__fit_intercept=True, LinearSVR__max_iter=2000)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -10.933321107596724}
4                                                         LinearSVR(input_matrix, LinearSVR__C=0.01, LinearSVR__fit_intercept=False, LinearSVR__max_iter=10000)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -11.044237589598175}
3                                                            LinearSVR(input_matrix, LinearSVR__C=1, LinearSVR__fit_intercept=False, LinearSVR__max_iter=10000)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -12.645930742839829}
16                                                         LinearSVR(input_matrix, LinearSVR__C=0.1, LinearSVR__fit_intercept=False, LinearSVR__max_iter=10000)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -13.41861899849651}
1                                                             LinearSVR(input_matrix, LinearSVR__C=10, LinearSVR__fit_intercept=True, LinearSVR__max_iter=2000)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -13.427181708455715}
18                                                                                            Lasso(input_matrix, Lasso__alpha=1000, Lasso__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -16.697178945079695}

[24 rows x 3 columns]


