23.02.2025 00:47:02
History:
                                                                                                                                                          model  ...                                                                                                                                             model_info
22  RandomForestRegressor(input_matrix, RandomForestRegressor__max_depth=200, RandomForestRegressor__max_features=sqrt, RandomForestRegressor__n_estimators=90)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.5733864909107796}
21   RandomForestRegressor(input_matrix, RandomForestRegressor__max_depth=30, RandomForestRegressor__max_features=sqrt, RandomForestRegressor__n_estimators=40)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.5782702143030184}
14   RandomForestRegressor(input_matrix, RandomForestRegressor__max_depth=10, RandomForestRegressor__max_features=log2, RandomForestRegressor__n_estimators=90)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.589582514808005}
8                                                                                              Ridge(input_matrix, Ridge__alpha=0.1, Ridge__fit_intercept=True)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.651624968789381}
17                                                                                           Ridge(input_matrix, Ridge__alpha=0.001, Ridge__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.6517153758415409}
2                                                                                             Ridge(input_matrix, Ridge__alpha=0.1, Ridge__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.6517504269635629}
10                                                                                               Ridge(input_matrix, Ridge__alpha=1, Ridge__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.6519131469217679}
23                                                                                              Ridge(input_matrix, Ridge__alpha=1, Ridge__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.6546243784605333}
12                                                                                              Ridge(input_matrix, Ridge__alpha=10, Ridge__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.6559379095071515}
19                                                                                           Lasso(input_matrix, Lasso__alpha=0.01, Lasso__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.6682768275795261}
16                                                         LinearSVR(input_matrix, LinearSVR__C=0.1, LinearSVR__fit_intercept=False, LinearSVR__max_iter=10000)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.6683013131209647}
4                                                         LinearSVR(input_matrix, LinearSVR__C=0.01, LinearSVR__fit_intercept=False, LinearSVR__max_iter=10000)  ...    {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.68604532256035}
20                                                                                           Ridge(input_matrix, Ridge__alpha=1000, Ridge__fit_intercept=False)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.704535549707403}
13                                                         LinearSVR(input_matrix, LinearSVR__C=0.001, LinearSVR__fit_intercept=True, LinearSVR__max_iter=2000)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7045668598024608}
3                                                            LinearSVR(input_matrix, LinearSVR__C=1, LinearSVR__fit_intercept=False, LinearSVR__max_iter=10000)  ...   {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.708163615263377}
11                                                             KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=20, KNeighborsRegressor__p=1)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7220321556307334}
9                                                                                               Lasso(input_matrix, Lasso__alpha=1, Lasso__fit_intercept=False)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7286647118367664}
15                                                              KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=5, KNeighborsRegressor__p=1)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7361187227071474}
7                                                               KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=3, KNeighborsRegressor__p=1)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7473766923697174}
6                                                               KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=5, KNeighborsRegressor__p=5)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7643711965680763}
0                                                               KNeighborsRegressor(input_matrix, KNeighborsRegressor__n_neighbors=3, KNeighborsRegressor__p=3)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7732729694881627}
5                                                                                                Lasso(input_matrix, Lasso__alpha=1, Lasso__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.7946168116613506}
18                                                                                            Lasso(input_matrix, Lasso__alpha=1000, Lasso__fit_intercept=True)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -0.8074448872203231}
1                                                             LinearSVR(input_matrix, LinearSVR__C=10, LinearSVR__fit_intercept=True, LinearSVR__max_iter=2000)  ...  {'generation': 0, 'mutation_count': 0, 'crossover_count': 0, 'predecessor': ('ROOT',), 'operator_count': 1, 'internal_cv_score': -1.2916760273236807}

[24 rows x 3 columns]


